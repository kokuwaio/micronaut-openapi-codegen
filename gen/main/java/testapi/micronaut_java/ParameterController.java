/*
 * Spec for api tests.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package testapi.micronaut_java;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.core.convert.format.Format;
import io.micronaut.security.annotation.Secured;
import io.micronaut.security.rules.SecurityRule;
import io.micronaut.http.HttpStatus;
import io.micronaut.http.exceptions.HttpStatusException;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import testapi.micronaut_java.ParameterModel;
import java.util.UUID;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen")
@Controller
public class ParameterController {
    /**
     * paramAll
     *
     * @param path  (required)
     * @param uuid  (required)
     * @param date  (optional)
     * @param integer  (optional)
     * @return ParameterModel
     */
    @Get(uri="/param/all/{path}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramAll(
        @PathVariable(value="path") @NotNull String path, 
        @QueryValue(value="uuid") @NotNull UUID uuid, 
        @QueryValue(value="date") @Nullable @Format("yyyy-MM-dd") LocalDate date, 
        @Header(value="integer") @Nullable Integer integer
    ) {
        // TODO implement paramAll();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramBodyOptional
     *
     * @param parameterModel  (optional)
     * @return ParameterModel
     */
    @Post(uri="/param/body/optional")
    @Produces(value = {"application/json"})
    @Consumes(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramBodyOptional(
        @Body @Nullable @Valid ParameterModel parameterModel
    ) {
        // TODO implement paramBodyOptional();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramBodyRequired
     *
     * @param parameterModel  (required)
     * @return ParameterModel
     */
    @Post(uri="/param/body/required")
    @Produces(value = {"application/json"})
    @Consumes(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramBodyRequired(
        @Body @NotNull @Valid ParameterModel parameterModel
    ) {
        // TODO implement paramBodyRequired();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramHeaderOptionalWithDefault
     *
     * @param string  (optional, default to this-is-default)
     * @return ParameterModel
     */
    @Get(uri="/param/header/optionalWithDefault")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramHeaderOptionalWithDefault(
        @Header(value="string", defaultValue="this-is-default") @Nullable String string
    ) {
        // TODO implement paramHeaderOptionalWithDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramHeaderOptionalWithoutDefault
     *
     * @param string  (optional)
     * @return ParameterModel
     */
    @Get(uri="/param/header/optionalWithoutDefault")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramHeaderOptionalWithoutDefault(
        @Header(value="string") @Nullable String string
    ) {
        // TODO implement paramHeaderOptionalWithoutDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramHeaderRequiredWithDefault
     *
     * @param string  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/header/requiredWithDefault")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramHeaderRequiredWithDefault(
        @Header(value="string", defaultValue="this-is-default") @NotNull String string
    ) {
        // TODO implement paramHeaderRequiredWithDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramHeaderRequiredWithoutDefault
     *
     * @param string  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/header/requiredWithoutDefault")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramHeaderRequiredWithoutDefault(
        @Header(value="string") @NotNull String string
    ) {
        // TODO implement paramHeaderRequiredWithoutDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathOverlayWithString
     *
     * @param string  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/overlay/{string}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathOverlayWithString(
        @PathVariable(value="string") @NotNull @Size(max=10) String string
    ) {
        // TODO implement paramPathOverlayWithString();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathOverlayWithUuid
     *
     * @param uuid  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/overlay/{uuid}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathOverlayWithUuid(
        @PathVariable(value="uuid") @NotNull UUID uuid
    ) {
        // TODO implement paramPathOverlayWithUuid();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathRequiredWithDefault
     *
     * @param string  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/requiredWithDefault/{string}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathRequiredWithDefault(
        @PathVariable(value="string", defaultValue="this-is-default") @NotNull String string
    ) {
        // TODO implement paramPathRequiredWithDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathRequiredWithoutDefault
     *
     * @param string  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/requiredWithoutDefault/{string}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathRequiredWithoutDefault(
        @PathVariable(value="string") @NotNull String string
    ) {
        // TODO implement paramPathRequiredWithoutDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathWithBoolean
     *
     * @param bool  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/with-bool/{bool}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathWithBoolean(
        @PathVariable(value="bool") @NotNull Boolean bool
    ) {
        // TODO implement paramPathWithBoolean();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathWithInteger
     *
     * @param integer  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/with-integer/{integer}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathWithInteger(
        @PathVariable(value="integer") @NotNull Integer integer
    ) {
        // TODO implement paramPathWithInteger();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathWithLong
     *
     * @param _long  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/with-long/{long}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathWithLong(
        @PathVariable(value="long") @NotNull Long _long
    ) {
        // TODO implement paramPathWithLong();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathWithMaxLength
     *
     * @param string  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/with-max-length/{string}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathWithMaxLength(
        @PathVariable(value="string") @NotNull @Size(max=5) String string
    ) {
        // TODO implement paramPathWithMaxLength();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathWithPattern
     *
     * @param string  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/with-pattern/{string}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathWithPattern(
        @PathVariable(value="string") @NotNull @Pattern(regexp="[0-9][a-z]") String string
    ) {
        // TODO implement paramPathWithPattern();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramPathWithUuid
     *
     * @param uuid  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/path/with-uuid/{uuid}")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramPathWithUuid(
        @PathVariable(value="uuid") @NotNull UUID uuid
    ) {
        // TODO implement paramPathWithUuid();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramQueryDate
     *
     * @param date  (optional)
     * @return ParameterModel
     */
    @Get(uri="/param/query/date")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramQueryDate(
        @QueryValue(value="date") @Nullable @Format("yyyy-MM-dd") LocalDate date
    ) {
        // TODO implement paramQueryDate();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramQueryDateTime
     *
     * @param date  (optional)
     * @return ParameterModel
     */
    @Get(uri="/param/query/date-time")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramQueryDateTime(
        @QueryValue(value="date") @Nullable @Format("yyyy-MM-dd'T'HH:mm:ss.SSSXXXX") OffsetDateTime date
    ) {
        // TODO implement paramQueryDateTime();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramQueryMultipleLists
     *
     * @param a  (optional)
     * @param b  (optional)
     * @param c  (optional)
     * @return ParameterModel
     */
    @Get(uri="/param/query/multiple-lists")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramQueryMultipleLists(
        @QueryValue(value="a") @Nullable List<String> a, 
        @QueryValue(value="b") @Nullable List<UUID> b, 
        @QueryValue(value="c") @Nullable List<Integer> c
    ) {
        // TODO implement paramQueryMultipleLists();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramQueryNumber
     *
     * @param date  (optional)
     * @return ParameterModel
     */
    @Get(uri="/param/query/number")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramQueryNumber(
        @QueryValue(value="date") @Nullable BigDecimal date
    ) {
        // TODO implement paramQueryNumber();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramQueryOptionalWithDefault
     *
     * @param string  (optional, default to this-is-default)
     * @return ParameterModel
     */
    @Get(uri="/param/query/optionalWithDefault")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramQueryOptionalWithDefault(
        @QueryValue(value="string", defaultValue="this-is-default") @Nullable String string
    ) {
        // TODO implement paramQueryOptionalWithDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramQueryOptionalWithoutDefault
     *
     * @param string  (optional)
     * @return ParameterModel
     */
    @Get(uri="/param/query/optionalWithoutDefault")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramQueryOptionalWithoutDefault(
        @QueryValue(value="string") @Nullable String string
    ) {
        // TODO implement paramQueryOptionalWithoutDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramQueryRequiredWithDefault
     *
     * @param string  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/query/requiredWithDefault")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramQueryRequiredWithDefault(
        @QueryValue(value="string", defaultValue="this-is-default") @NotNull String string
    ) {
        // TODO implement paramQueryRequiredWithDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramQueryRequiredWithoutDefault
     *
     * @param string  (required)
     * @return ParameterModel
     */
    @Get(uri="/param/query/requiredWithoutDefault")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramQueryRequiredWithoutDefault(
        @QueryValue(value="string") @NotNull String string
    ) {
        // TODO implement paramQueryRequiredWithoutDefault();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * paramQueryUuid
     *
     * @param date  (optional)
     * @return ParameterModel
     */
    @Get(uri="/param/query/uuid")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public ParameterModel paramQueryUuid(
        @QueryValue(value="date") @Nullable UUID date
    ) {
        // TODO implement paramQueryUuid();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }

}
