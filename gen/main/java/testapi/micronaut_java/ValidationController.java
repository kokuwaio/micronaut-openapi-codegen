/*
 * Spec for api tests.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package testapi.micronaut_java;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.core.convert.format.Format;
import io.micronaut.security.annotation.Secured;
import io.micronaut.security.rules.SecurityRule;
import io.micronaut.http.HttpStatus;
import io.micronaut.http.exceptions.HttpStatusException;
import testapi.micronaut_java.StringModel;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen")
@Controller
public class ValidationController {
    /**
     * validationDoubleMax
     *
     * @param number  (required)
     */
    @Get(uri="/validation/double/max")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationDoubleMax(
        @QueryValue(value="number") @NotNull @DecimalMax(value="4", inclusive=false) Double number
    ) {
        // TODO implement validationDoubleMax();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationDoubleMin
     *
     * @param number  (required)
     */
    @Get(uri="/validation/double/min")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationDoubleMin(
        @QueryValue(value="number") @NotNull @DecimalMin(value="3", inclusive=false) Double number
    ) {
        // TODO implement validationDoubleMin();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationDoubleRange
     *
     * @param number  (required)
     */
    @Get(uri="/validation/double/range")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationDoubleRange(
        @QueryValue(value="number") @NotNull @DecimalMin("3") @DecimalMax("4") Double number
    ) {
        // TODO implement validationDoubleRange();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationFloatMax
     *
     * @param number  (required)
     */
    @Get(uri="/validation/float/max")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationFloatMax(
        @QueryValue(value="number") @NotNull @DecimalMax(value="4", inclusive=false) Float number
    ) {
        // TODO implement validationFloatMax();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationFloatMin
     *
     * @param number  (required)
     */
    @Get(uri="/validation/float/min")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationFloatMin(
        @QueryValue(value="number") @NotNull @DecimalMin(value="3", inclusive=false) Float number
    ) {
        // TODO implement validationFloatMin();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationFloatRange
     *
     * @param number  (required)
     */
    @Get(uri="/validation/float/range")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationFloatRange(
        @QueryValue(value="number") @NotNull @DecimalMin("3") @DecimalMax("4") Float number
    ) {
        // TODO implement validationFloatRange();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationIntegerMax
     *
     * @param integer  (required)
     */
    @Get(uri="/validation/integer/max")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationIntegerMax(
        @QueryValue(value="integer") @NotNull @Max(4) Integer integer
    ) {
        // TODO implement validationIntegerMax();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationIntegerMin
     *
     * @param integer  (required)
     */
    @Get(uri="/validation/integer/min")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationIntegerMin(
        @QueryValue(value="integer") @NotNull @Min(3) Integer integer
    ) {
        // TODO implement validationIntegerMin();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationIntegerRange
     *
     * @param integer  (required)
     */
    @Get(uri="/validation/integer/range")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationIntegerRange(
        @QueryValue(value="integer") @NotNull @Min(3) @Max(4) Integer integer
    ) {
        // TODO implement validationIntegerRange();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationListMax
     *
     * @param _list  (required)
     */
    @Get(uri="/validation/list/max")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationListMax(
        @QueryValue(value="list") @NotNull @Size(max=4) List<Integer> _list
    ) {
        // TODO implement validationListMax();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationListMin
     *
     * @param _list  (required)
     */
    @Get(uri="/validation/list/min")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationListMin(
        @QueryValue(value="list") @NotNull @Size(min=3) List<Integer> _list
    ) {
        // TODO implement validationListMin();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationListModel
     *
     * @param stringModel  (required)
     */
    @Post(uri="/validation/list/model")
    @Produces(value = {})
    @Consumes(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationListModel(
        @Body @NotNull List<StringModel> stringModel
    ) {
        // TODO implement validationListModel();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationListRange
     *
     * @param _list  (required)
     */
    @Post(uri="/validation/list/range")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationListRange(
        @QueryValue(value="list") @NotNull @Size(min=3, max=4) List<Integer> _list
    ) {
        // TODO implement validationListRange();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationLongMax
     *
     * @param integer  (required)
     */
    @Get(uri="/validation/long/max")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationLongMax(
        @QueryValue(value="integer") @NotNull @Max(4L) Long integer
    ) {
        // TODO implement validationLongMax();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationLongMin
     *
     * @param integer  (required)
     */
    @Get(uri="/validation/long/min")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationLongMin(
        @QueryValue(value="integer") @NotNull @Min(3L) Long integer
    ) {
        // TODO implement validationLongMin();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationLongRange
     *
     * @param integer  (required)
     */
    @Get(uri="/validation/long/range")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationLongRange(
        @QueryValue(value="integer") @NotNull @Min(3L) @Max(4L) Long integer
    ) {
        // TODO implement validationLongRange();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationModel
     *
     * @param stringModel  (required)
     */
    @Post(uri="/validation/model")
    @Produces(value = {})
    @Consumes(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationModel(
        @Body @NotNull @Valid StringModel stringModel
    ) {
        // TODO implement validationModel();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationStringMax
     *
     * @param string  (required)
     */
    @Get(uri="/validation/string/max")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationStringMax(
        @QueryValue(value="string") @NotNull @Size(max=4) String string
    ) {
        // TODO implement validationStringMax();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationStringMin
     *
     * @param string  (required)
     */
    @Get(uri="/validation/string/min")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationStringMin(
        @QueryValue(value="string") @NotNull @Size(min=3) String string
    ) {
        // TODO implement validationStringMin();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationStringPattern
     *
     * @param string  (required)
     */
    @Get(uri="/validation/string/pattern")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationStringPattern(
        @QueryValue(value="string") @NotNull @Pattern(regexp="[a-z]{3,5}") String string
    ) {
        // TODO implement validationStringPattern();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }


    /**
     * validationStringRange
     *
     * @param string  (required)
     */
    @Get(uri="/validation/string/range")
    @Produces(value = {})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public void validationStringRange(
        @QueryValue(value="string") @NotNull @Size(min=3, max=4) String string
    ) {
        // TODO implement validationStringRange();
        throw new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null);
    }

}
