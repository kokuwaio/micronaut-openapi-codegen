openapi: 3.0.3
info:
  title: Spec for api tests.
  version: '1'
paths: {}
components:
  schemas:

    ###
    ### Model
    ###

    Model:
      type: object
      required:
        - name
        - array
        - map
        - set
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 36
        date:
          type: string
          format: date
        date-time:
          type: string
          format: date-time
        number:
          type: number
        binary:
          type: string
          format: binary
        bytes:
          type: string
          format: byte
        any: {}
        array:
          type: array
          items:
            type: string
        set:
          type: array
          items:
            type: string
          uniqueItems: true
        map:
          type: string
          additionalProperties:
            type: string
        optionalArray:
          type: array
          items:
            type: string
        optionalSet:
          type: array
          items:
            type: string
          uniqueItems: true
        optionalMap:
          type: string
          additionalProperties:
            type: string
        nullableString:
          type: string
          nullable: true
        nullableArray:
          type: array
          nullable: true
          items:
            type: string
        nullableSet:
          type: array
          nullable: true
          items:
            type: string
          uniqueItems: true
        nullableMap:
          type: string
          nullable: true
          additionalProperties:
            type: string
        defaultString:
          type: string
          default: defaultStringValue
        defaultInteger:
          type: integer
          format: int64
          default: 1234
        defaultNullable:
          type: string
          default: defaultNullableValue
          nullable: true

    ###
    ### Enumerations
    ###

    EnumerationModel:
      type: object
      properties:
        string:
          $ref: '#/components/schemas/EnumerationString'
        string-default:
          $ref: '#/components/schemas/EnumerationStringDefault'
        embedded:
          type: string
          enum:
            - first
            - second
        embedded-default:
          type: string
          enum:
            - three
            - four
          default: four
    EnumerationString:
      type: string
      enum:
        - one
        - two
    EnumerationStringDefault:
      type: string
      enum:
        - three
        - four
      default: three
    EnumerationInteger:
      type: integer
      enum:
        - -2147483648
        - -1
        - 0
        - 1
        - 2147483647
    EnumerationNumber:
      type: number
      enum:
        - -1
        - 0
        - 1

    ###
    ### Simple Inheritance
    ###

    InheritanceSimple:
      type: object
      properties:
        foo:
          type: string
      required:
        - foo
    InheritanceExtended:
      allOf:
        - $ref: '#/components/schemas/InheritanceSimple'
        - type: object
          properties:
            bar:
              type: string
          required:
            - bar

    ###
    ### Inheritance without type property
    ###

    # InheritanceWithoutType:
    #   type: object
    #   discriminator:
    #     propertyName: type
    #     mapping:
    #       Inheritance1: '#/components/schemas/InheritanceWithoutType1'
    #       Inheritance2: '#/components/schemas/InheritanceWithoutType2'
    #       Inheritance3: '#/components/schemas/InheritanceWithoutType3'
    # InheritanceWithoutType1:
    #   type: object
    #   allOf:
    #     - $ref: '#/components/schemas/InheritanceWithoutType'
    #     - properties:
    #         a:
    #           type: string
    # InheritanceWithoutType2:
    #   type: object
    #   allOf:
    #     - $ref: '#/components/schemas/InheritanceWithoutType'
    #     - properties:
    #         b:
    #           type: string
    # InheritanceWithoutType3:
    #   allOf:
    #     - $ref: '#/components/schemas/InheritanceWithoutType'
    #     - properties:
    #         c:
    #           type: string

    ###
    ### Inheritance with type property
    ###

    InheritanceWithTypeEnum:
      type: string
      enum:
        - InheritanceWithType1
        - InheritanceWithType2
        - InheritanceWithType3
    InheritanceWithType:
      type: object
      discriminator:
        propertyName: type
        mapping:
          Inheritance1: '#/components/schemas/InheritanceWithType1'
          Inheritance2: '#/components/schemas/InheritanceWithType2'
          Inheritance3: '#/components/schemas/InheritanceWithType3'
      properties:
        type:
          $ref: '#/components/schemas/InheritanceWithTypeEnum'
    InheritanceWithType1:
      type: object
      allOf:
        - $ref: '#/components/schemas/InheritanceWithType'
        - properties:
            a:
              type: string
    InheritanceWithType2:
      type: object
      allOf:
        - $ref: '#/components/schemas/InheritanceWithType'
        - properties:
            b:
              type: string
    InheritanceWithType3:
      allOf:
        - $ref: '#/components/schemas/InheritanceWithType2'
        - properties:
            c:
              type: string
