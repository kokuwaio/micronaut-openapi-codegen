{{#allParams}}{{#useBeanValidation}}{{#isBodyParam}}{{#isModel}}			@javax.validation.Valid
{{/isModel}}{{#isContainer}}			@javax.validation.Valid
{{/isContainer}}{{/isBodyParam}}{{#pattern}}			@javax.validation.constraints.Pattern(regexp = "{{{pattern}}}")
{{/pattern}}{{#required}}{{^isPathParam}}			@javax.validation.constraints.NotNull
{{/isPathParam}}{{/required}}{{#minimum}}{{#isInteger}}			@javax.validation.constraints.Min({{minimum}})
{{/isInteger}}{{#isLong}}			@javax.validation.constraints.Min({{minimum}})
{{/isLong}}{{^isInteger}}{{^isLong}}			@javax.validation.constraints.DecimalMin(value = "{{minimum}}", inclusive = {{#exclusiveMinimum}}false{{/exclusiveMinimum}}{{^exclusiveMinimum}}true{{/exclusiveMinimum}})
{{/isLong}}{{/isInteger}}{{/minimum}}{{#maximum}}{{#isInteger}}			@javax.validation.constraints.Max({{maximum}})
{{/isInteger}}{{#isLong}}			@javax.validation.constraints.Max({{maximum}})
{{/isLong}}{{^isInteger}}{{^isLong}}			@javax.validation.constraints.DecimalMax(value = "{{maximum}}", inclusive = {{#exclusiveMaximum}}false{{/exclusiveMaximum}}{{^exclusiveMaximum}}true{{/exclusiveMaximum}})
{{/isLong}}{{/isInteger}}{{/maximum}}{{#minLength}}{{^maxLength}}			@javax.validation.constraints.Size(min = {{minLength}})
{{/maxLength}}{{/minLength}}{{^minLength}}{{#maxLength}}			@javax.validation.constraints.Size(max = {{maxLength}})
{{/maxLength}}{{/minLength}}{{#minLength}}{{#maxLength}}			@javax.validation.constraints.Size(min = {{minLength}}, max = {{maxLength}})
{{/maxLength}}{{/minLength}}{{/useBeanValidation}}{{^required}}{{^isBodyParam}}{{^useOptionals}}			@javax.annotation.Nullable{{/useOptionals}}{{#useOptionals}}			@javax.annotation.Nonnull{{/useOptionals}}
{{/isBodyParam}}{{/required}}{{#isQueryParam}}			@io.micronaut.http.annotation.QueryValue{{^isListContainer}}(value = "{{baseName}}"{{^isContainer}}{{#defaultValue}}, defaultValue = "{{defaultValue}}"{{/defaultValue}}{{/isContainer}}){{/isListContainer}}
{{/isQueryParam}}{{#isBodyParam}}			@io.micronaut.http.annotation.Body
{{/isBodyParam}}{{#isPathParam}}			@io.micronaut.http.annotation.PathVariable(name = "{{baseName}}"{{#defaultValue}}, defaultValue = "{{defaultValue}}"{{/defaultValue}})
{{/isPathParam}}{{#isHeaderParam}}			@io.micronaut.http.annotation.Header("{{baseName}}")
{{/isHeaderParam}}			{{#isBodyParam}}{{{dataType}}}{{/isBodyParam}}{{^isBodyParam}}{{#required}}{{{dataType}}}{{/required}}{{^required}}{{#useOptionals}}java.util.Optional<{{{dataType}}}>{{/useOptionals}}{{^useOptionals}}{{{dataType}}}{{/useOptionals}}{{/required}}{{/isBodyParam}} {{paramName}}{{#hasMore}},
{{/hasMore}}{{/allParams}}