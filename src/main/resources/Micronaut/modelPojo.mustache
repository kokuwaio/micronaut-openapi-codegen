{{#discriminator}}@com.fasterxml.jackson.annotation.JsonTypeInfo(use = com.fasterxml.jackson.annotation.JsonTypeInfo.Id.NAME, include = com.fasterxml.jackson.annotation.JsonTypeInfo.As.PROPERTY, property = "{{{discriminatorName}}}")
@com.fasterxml.jackson.annotation.JsonSubTypes({
	{{#discriminator.mappedModels}}
	@com.fasterxml.jackson.annotation.JsonSubTypes.Type(value = {{modelName}}.class, name = "{{^vendorExtensions.x-discriminator-value}}{{mappingName}}{{/vendorExtensions.x-discriminator-value}}{{#vendorExtensions.x-discriminator-value}}{{{vendorExtensions.x-discriminator-value}}}{{/vendorExtensions.x-discriminator-value}}"),
	{{/discriminator.mappedModels}}
})
{{/discriminator}}{{#introspected}}@io.micronaut.core.annotation.Introspected
{{/introspected}}
public {{#discriminator}}abstract {{/discriminator}}class {{classname}}{{#parent}} extends {{{parent}}}{{/parent}} {

{{#vars}}
	public static final String JSON_PROPERTY_{{nameInSnakeCase}} = "{{baseName}}";
{{/vars}}

{{#vars}}{{#description}}	/** {{description}} */
{{/description}}{{#useBeanValidation}}{{>modelPropertyValidation}}{{/useBeanValidation}}{{>modelPropertyJackson}}
	private {{>modelPropertyType}} {{name}}{{>modelPropertyDefault}};

{{/vars}}
{{#discriminator}}
	@com.fasterxml.jackson.annotation.JsonIgnore
	public abstract {{discriminator.propertyType}} {{discriminator.propertyGetter}}();

{{/discriminator}}{{#vendorExtensions.discriminatorPropertyValue}}
	public {{vendorExtensions.discriminatorPropertyType}} {{vendorExtensions.discriminatorPropertyGetter}}() {
		return {{{vendorExtensions.discriminatorPropertyValue}}};
	}

{{/vendorExtensions.discriminatorPropertyValue}}
	// methods

	@Override
	public boolean equals(Object object) {
		if (object == this) {
			return true;
		}
		if (object == null || getClass() != object.getClass()) {
			return false;
		}
		{{classname}} other = ({{classname}}) object;
		return {{^vars}}{{#discriminator}}java.util.Objects.equals({{discriminator.propertyGetter}}(), other.{{discriminator.propertyGetter}}());{{/discriminator}}{{^discriminator}}super.equals(object);{{/discriminator}}{{/vars}}{{#vars}}{{^isByteArray}}java.util.Objects{{/isByteArray}}{{#isByteArray}}java.util.Arrays{{/isByteArray}}.equals({{name}}, other.{{name}}){{^-last}}
				&& {{/-last}}{{#-last}}{{#discriminator}}
				&& java.util.Objects.equals({{discriminator.propertyGetter}}(), other.{{discriminator.propertyGetter}}()){{/discriminator}}{{#parent}}
				&& super.equals(object){{/parent}};{{/-last}}{{/vars}}
	}

	@Override
	public int hashCode() {
		return java.util.Objects.hash({{^vars}}{{#discriminator}}{{discriminator.propertyGetter}}(){{/discriminator}}{{/vars}}{{#vars}}{{^isByteArray}}{{name}}{{/isByteArray}}{{#isByteArray}}java.util.Arrays.hashCode({{name}}){{/isByteArray}}{{^-last}}, {{/-last}}{{#-last}}{{#discriminator}}, {{discriminator.propertyGetter}}(){{/discriminator}}{{#parent}}, super.hashCode(){{/parent}}{{/-last}}{{/vars}});
	}

	@Override
	public String toString() {
		return new StringBuilder()
				.append("{{classname}}["){{#parent}}
				.append("super").append(super.toString()){{/parent}}
		{{#vars}}		.append("{{name}}{{^isByteArray}}=").append({{name}}{{/isByteArray}}{{#isByteArray}}.length=").append({{name}} == null ? null : {{name}}.length{{/isByteArray}}){{^-last}}.append(","){{/-last}}
		{{/vars}}		.append("]")
				.toString();
	}

	// fluent
	{{#vars}}

	public {{classname}} {{name}}({{>modelPropertyType}} {{name}}) {
		this.{{name}} = {{name}};
		return this;
	}

	public {{>modelPropertyType}} {{name}}() {
		return {{name}};
	}
	{{/vars}}

    {{#vendorExtensions.additionalPropertiesMap}}
    private {{{vendorExtensions.additionalPropertiesMap}}} additionalProperties;

    @com.fasterxml.jackson.annotation.JsonAnyGetter
    public {{{vendorExtensions.additionalPropertiesMap}}} getAdditionalProperties() {
        return additionalProperties;
    }

    @com.fasterxml.jackson.annotation.JsonAnySetter
    public void setAdditionalProperties({{{vendorExtensions.additionalPropertiesMap}}} additionalProperties) {
        this.additionalProperties = additionalProperties;
    }

    {{/vendorExtensions.additionalPropertiesMap}}


	// getter/setter
	{{#vars}}

	public {{>modelPropertyType}} {{getter}}() {
		return {{name}};
	}

	public {{classname}} {{setter}}({{>modelPropertyType}} {{name}}) {
		this.{{name}} = {{name}};
		return this;
	}{{/vars}}{{#vars}}{{#isEnum}}

{{>modelEnum}}{{/isEnum}}{{/vars}}
}