package {{package}};
{{#modelPackage}}
import {{modelPackage}}.*;{{/modelPackage}}

/** Test client for {@link {{classname}}}. **/
{{>generated}}
@io.micronaut.http.client.annotation.Client("${test.clientId:/}")
public interface {{classname}}TestClient { {{#operations}}{{#operation}}

	@io.micronaut.http.annotation.{{vendorExtensions.httpMethod}}("{{{vendorExtensions.path}}}"){{#hasConsumes}}
	@io.micronaut.http.annotation.Produces({ {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} }){{/hasConsumes}}{{#hasProduces}}
	@io.micronaut.http.annotation.Consumes({ {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }){{/hasProduces}}
	io.micronaut.http.HttpResponse<{{^returnType}}?{{/returnType}}{{#returnType}}{{{returnType}}}{{/returnType}}> {{nickname}}({{#hasParams}}
{{>testParams}}){{/hasParams}}{{^hasParams}}){{/hasParams}};{{#vendorExtensions.has401}}

	@io.micronaut.http.annotation.{{vendorExtensions.httpMethod}}("{{{vendorExtensions.path}}}"){{#hasConsumes}}
	@io.micronaut.http.annotation.Produces({ {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} }){{/hasConsumes}}{{#hasProduces}}
	@io.micronaut.http.annotation.Consumes({ {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }){{/hasProduces}}
	io.micronaut.http.HttpResponse<{{^returnType}}?{{/returnType}}{{#returnType}}{{{returnType}}}{{/returnType}}> {{nickname}}(
            {{^useOptional}}@javax.annotation.Nullable{{/useOptional}}
			@io.micronaut.http.annotation.Header(io.micronaut.http.HttpHeaders.AUTHORIZATION)
			String authorization{{#hasParams}},
{{>testParams}}{{/hasParams}});{{/vendorExtensions.has401}}{{/operation}}
}{{/operations}}